name: AndroidBuild
on:
  pull_request:
    branches : [FD_v1.0.1]
  push:
    branches : [FD_v1.0.1]

jobs:
#  checkout Repository
  Check-out:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0


  #  Lint checking the source code , xml designs for warnings and errors
  Lint:
    needs: Check-out


    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.0

      - name: Lint checking
        uses: ./gradlew lint

      - name: Upload Lint report
        uses: actions/upload-artifact@v3
        with:
          name: Lint-Report
          path: app/build/reports/lint-results-debug.html







  #  Integrating project gradle , javaJDK , granting execute permissions for gradlew

  build:
    needs: Lint
    runs-on: ${{ matrix.os }}



    steps:
      - name : Checkout
        uses: actions/checkout@v4.1.0

      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Grant execute permissions for gradlew //this step is only for macOS
        run: chmod +x ./gradlew

        #build gradle

      - name: Build with Gradle
        run: ./gradlew build



      #Setup Gradle Cache to improve the speed of the workflows

      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
#Building apk
  upload:
    needs: build
    runs-on: ${{ matrix.os }}
    steps:

      - name: Debug Workflow Environment
        run: |
            echo "Current Directory: $(pwd)"
            cd app/build/outputs/apk/debug

      #build a debug APK

      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: upload build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: Face_Detection.apk
          path: app/build/outputs/apk/debug/app-debug.apk


#Testing
  Test:
    needs: upload
    runs-on: ${{ matrix.os }}
    steps:
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: |
            emulator @Pixel_8_Pro -no-snapshot -no-window -no-audio -wipe-data -timezone America/New_York
            adb wait-for-device
            echo Emulator started successfully
            adb devices    

      - name: run tests
        run: ./gradlew connectedAndroidTest
        env:
          EMULATOR_API_LEVEL: 29
          EMULATOR_SERIAL: emulator-5556


      

