name: AndroidBuild


on:
  pull_request:
    branches : [FD_v1.0.1]
  push:
    branches : [FD_v1.0.1]

jobs:

#  building project gradle, gradlew access granting ...

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]


    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0

      - name: Setup Java JDK
        uses: actions/setup-java@v3.13.0
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Grant execute permissions for gradlew //this step is only for macOS
        run: chmod +x ./gradlew

        #build gradle

      - name: Build with Gradle
        run: ./gradlew build



      #Setup Gradle Cache to improve the speed of the workflows

      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
  #  Lint checking the source code , xml designs for warnings and errors
  Lint:
    needs: build

    strategy:
      matrix:
        os: [ ubuntu-latest ]


    runs-on: ${{ matrix.os }}
    steps:


      - name: Lint checking
        run:  ./gradlew lint

      - name: Upload Lint report
        uses: actions/upload-artifact@v3
        with:
          name: Lint-Report
          path: app/build/reports/lint-results-debug.html


#  Building apk
  upload:
    needs: build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]


    steps:


      #build a debug APK

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: upload build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: Face_Detection.apk
          path: app/build/outputs/apk/debug/app-debug.apk

# signing bundle AAB
      - name: Build Release Bundle
        run: ./gradlew bundleRelease

      - name: Sign Bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/release
          signingKeyBase64: ${{ secrets.FACEKEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.FACEPASSWORD }}

      - name: Upload Bundle
        uses: actions/upload-artifact@v2
        with:
          name: release.aab
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}
  Unit_Test:
    needs: build
    runs-on: ${{ matrix.os }}

    steps:
      - name: Run tests
        run: ./gradlew testDebug

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: app/build/reports/tests



  #Testing
  Test:
    needs: Unit_Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Enable KVM
        run: |
          echo avdmanager list avd
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: |
            $ANDROID_HOME/emulator/emulator -avd Pixel_8_Pro_API_VanillaIceCream -no-audio -no-window -accel auto -gpu swiftshader_indirect
            adb wait-for-device
            echo Emulator started successfully
            adb devices    

      - name: run tests
        run: ./gradlew connectedAndroidTest
        env:
          EMULATOR_API_LEVEL: 29
          EMULATOR_SERIAL: emulator-5556


      

